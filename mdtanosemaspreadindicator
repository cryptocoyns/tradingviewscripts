//@version=3
//
// Built an indicator providing buy / sell signals for MDTANOS from the 
// ProfitTrailer discord https://discord.gg/K9a37Vh as an educational exercise to
// show him and the rest of the profit trailer community how to create an indicator
// on TradingView using PineScript.
//
// He requested:
//    i would like to know how to see on tradingview a combination of EMASPREADS 
//    on 5 min and 15 min time frame is it possible?
//    i have a buy strategy from A to D that combines several time frames
//    all using EMASPREAD
//    and the bot buys when all them are true
//    each of them uses a different time frame
//    5 min, 15 min, 30 min, 1hour 2 hours 4 hours and 1 day
//    is there a way to visualize thid condition on tradingview?//
//
// Rather than build directly to the requested strategy I made this a
// generic and more flexible indicator that can be used and configured
// to work on any market, timeframe and trading pair. 
// Note it is using the timeframes defined for the CandlePeriod parameter
// rather than the chart resolution.
// I first published the basis of this indicator on the ProfitTrailer discord.
//
// The script uses an EMA spread as its main signal and displays the
// spread values as lines on the indicator based on whatever input 
// criteria you provide.
//
// Based on the buy value and buy limit values it works out buy signals.
// The display of the buy signals is optional as displaying them altogether
// would not be particularly useful.
//
// This software is provided under a commercial license that grants
// personal use only, please refer:
// https://github.com/cryptocoyns/tradingviewscripts/license
//
// Copyright (c) 2018, Grant Cause aka CryptoCoyn
//
indicator_title = "MDTANOS EMA Spread Indicator"
indicator_short_title = "MDTANOS EMA Spread"
indicator_release = "2018-09-01"
indicator_overlay = false
indicator_scale = scale.right
indicator_precision = 4
indicator_max_bars_back = 500

study(title=indicator_title+" [v"+indicator_release+"]", shorttitle=indicator_short_title, overlay=indicator_overlay, precision=indicator_precision, scale=indicator_scale, max_bars_back=indicator_max_bars_back)

// define input values for EMA Spread A
emaSpreadHeader_A =   input(defval = false, title = "---- EMA Spread A ----")
inputCandlePeriod_A = input(defval = "5",   title = "A - Candle Period", type = resolution)
inputFastLength_A =   input(defval = 5,     title = "A - Fast Length", type = integer, minval=1, maxval=500)
inputSlowLength_A =   input(defval = 20,    title = "A - Slow Length", type = integer, minval=1, maxval=500)
inputBuy_A =          input(defval = 0.0139,title = "A - Buy Value", type = float)
inputBuyLimit_A =     input(defval = 0.41,  title = "A - Buy Value Limit", type = float)
showBuySignal_A =     input(true,           title = "A - Show Buy Signal?")

// define input values for EMA Spread B
emaSpreadHeader_B =   input(defval = false, title = "---- EMA Spread B ----")
inputCandlePeriod_B = input(defval = "15",  title = "B - Candle Period", type = resolution)
inputFastLength_B =   input(defval = 15,    title = "B - Fast Length", type = integer, minval=1, maxval=500)
inputSlowLength_B =   input(defval = 60,    title = "B - Slow Length", type = integer, minval=1, maxval=500)
inputBuy_B =          input(defval = 0.0417,title = "B - Buy Value", type = float)
inputBuyLimit_B =     input(defval = 1,     title = "B - Buy Value Limit", type = float)
showBuySignal_B =     input(false,          title = "B - Show Buy Signal?")

// define input values for EMA Spread C
emaSpreadHeader_C =   input(defval = false, title = "---- EMA Spread C ----")
inputCandlePeriod_C = input(defval = "30",  title = "C - Candle Period", type = resolution)
inputFastLength_C =   input(defval = 5,     title = "C - Fast Length", type = integer, minval=1, maxval=500)
inputSlowLength_C =   input(defval = 20,    title = "C - Slow Length", type = integer, minval=1, maxval=500)
inputBuy_C =          input(defval = 0.084, title = "C - Buy Value", type = float)
inputBuyLimit_C =     input(defval = 1,     title = "C - Buy Value Limit", type = float)
showBuySignal_C =     input(false,          title = "C - Show Buy Signal?")

// define input values for EMA Spread D
emaSpreadHeader_D =   input(defval = false, title = "---- EMA Spread D ----")
inputCandlePeriod_D = input(defval = "60",  title = "D - Candle Period", type = resolution)
inputFastLength_D =   input(defval = 10,    title = "D - Fast Length", type = integer, minval=1, maxval=500)
inputSlowLength_D =   input(defval = 40,    title = "D - Slow Length", type = integer, minval=1, maxval=500)
inputBuy_D =          input(defval = 0.167, title = "D - Buy Value", type = float)
inputBuyLimit_D =     input(defval = 1,     title = "D - Buy Value Limit", type = float)
showBuySignal_D =     input(false,          title = "D - Show Buy Signal?")

// define input values for EMA Spread E
emaSpreadHeader_E =   input(defval = false, title = "---- EMA Spread E ----")
inputCandlePeriod_E = input(defval = "120", title = "E - Candle Period", type = resolution)
inputFastLength_E =   input(defval = 20,    title = "E - Fast Length", type = integer, minval=1, maxval=500)
inputSlowLength_E =   input(defval = 80,    title = "E - Slow Length", type = integer, minval=1, maxval=500)
inputBuy_E =          input(defval = 0.34,  title = "E - Buy Value", type = float)
inputBuyLimit_E =     input(defval = 1,     title = "E - Buy Value Limit", type = float)
showBuySignal_E =     input(false,          title = "E - Show Buy Signal?")

// define input values for EMA Spread F
emaSpreadHeader_F =   input(defval = false, title = "---- EMA Spread F ----")
inputCandlePeriod_F = input(defval = "180", title = "F - Candle Period", type = resolution)
inputFastLength_F =   input(defval = 40,    title = "F - Fast Length", type = integer, minval=1, maxval=500)
inputSlowLength_F =   input(defval = 160,   title = "F - Slow Length", type = integer, minval=1, maxval=500)
inputBuy_F =          input(defval = 0.67,  title = "F - Buy Value", type = float)
inputBuyLimit_F =     input(defval = 1,     title = "F - Buy Value Limit", type = float)
showBuySignal_F =     input(false,          title = "F - Show Buy Signal?")

// define input values for EMA Spread G
emaSpreadHeader_G =   input(defval = false, title = "---- EMA Spread G ----")
inputCandlePeriod_G = input(defval = "D",   title = "G - Candle Period", type = resolution)
inputFastLength_G =   input(defval = 120,   title = "G - Fast Length", type = integer, minval=1, maxval=500)
inputSlowLength_G =   input(defval = 480,   title = "G - Slow Length", type = integer, minval=1, maxval=500)
inputBuy_G =          input(defval = 0.67,  title = "G - Buy Value", type = float)
inputBuyLimit_G =     input(defval = 1,     title = "G - Buy Value Limit", type = float)
showBuySignal_G =     input(false,          title = "G - Show Buy Signal?")

// Function to work out EMA Spread based on multiple timeframes
emaSpread(varCandlePeriod, varFast, varSlow) =>
    emaFast = ema(close, varFast)
    emaSlow = ema(close, varSlow)
    calcFastEMA = security(tickerid, varCandlePeriod, emaFast)
    calcSlowEMA = security(tickerid, varCandlePeriod, emaSlow)
    spreadValue = ((calcFastEMA / calcSlowEMA) - 1) * 100
    
    spreadValue

// Function to determine EMA Spread Buy Signal
emaSpreadBuySignal(varEMASpread, varBuyValue, varBuyValueLimit) =>
    buySignal = (varEMASpread > 0) ? (varEMASpread <= varBuyValueLimit and varEMASpread >= varBuyValue) : (varEMASpread >= varBuyValueLimit and varEMASpread <= varBuyValue)
    
    buySignal

// Calculate EMA Spread Values
emaSpreadA = emaSpread(inputCandlePeriod_A, inputFastLength_A, inputSlowLength_A)
emaSpreadB = emaSpread(inputCandlePeriod_B, inputFastLength_B, inputSlowLength_B)
emaSpreadC = emaSpread(inputCandlePeriod_C, inputFastLength_C, inputSlowLength_C)
emaSpreadD = emaSpread(inputCandlePeriod_D, inputFastLength_D, inputSlowLength_D)
emaSpreadE = emaSpread(inputCandlePeriod_E, inputFastLength_E, inputSlowLength_E)
emaSpreadF = emaSpread(inputCandlePeriod_F, inputFastLength_F, inputSlowLength_F)
emaSpreadG = emaSpread(inputCandlePeriod_G, inputFastLength_G, inputSlowLength_G)

// Determine Buy Signals for EMA Spread values
buySignalEMASpread_A = emaSpreadBuySignal(emaSpreadA, inputBuy_A, inputBuyLimit_A)
buySignalEMASpread_B = emaSpreadBuySignal(emaSpreadB, inputBuy_B, inputBuyLimit_B)
buySignalEMASpread_C = emaSpreadBuySignal(emaSpreadC, inputBuy_C, inputBuyLimit_C)
buySignalEMASpread_D = emaSpreadBuySignal(emaSpreadD, inputBuy_D, inputBuyLimit_D)
buySignalEMASpread_E = emaSpreadBuySignal(emaSpreadE, inputBuy_E, inputBuyLimit_E)
buySignalEMASpread_F = emaSpreadBuySignal(emaSpreadF, inputBuy_F, inputBuyLimit_F)
buySignalEMASpread_G = emaSpreadBuySignal(emaSpreadG, inputBuy_G, inputBuyLimit_G)

// Define colours for EMA spread values
emaSpreadColour_A = red
emaSpreadColour_B = green
emaSpreadColour_C = yellow
emaSpreadColour_D = blue
emaSpreadColour_E = orange
emaSpreadColour_F = maroon
emaSpreadColour_G = teal

// Plot Buy Signal on Chart
buySignalColour_A = (showBuySignal_A and buySignalEMASpread_A) ? emaSpreadColour_A : na
buySignalColour_B = (showBuySignal_B and buySignalEMASpread_B) ? emaSpreadColour_B : na
buySignalColour_C = (showBuySignal_C and buySignalEMASpread_C) ? emaSpreadColour_C : na
buySignalColour_D = (showBuySignal_D and buySignalEMASpread_D) ? emaSpreadColour_D : na
buySignalColour_E = (showBuySignal_E and buySignalEMASpread_E) ? emaSpreadColour_E : na
buySignalColour_F = (showBuySignal_F and buySignalEMASpread_F) ? emaSpreadColour_F : na
buySignalColour_G = (showBuySignal_G and buySignalEMASpread_G) ? emaSpreadColour_G : na

bgcolor(buySignalColour_A, transp = 70)
bgcolor(buySignalColour_B, transp = 70)
bgcolor(buySignalColour_C, transp = 70)
bgcolor(buySignalColour_D, transp = 70)
bgcolor(buySignalColour_E, transp = 70)
bgcolor(buySignalColour_F, transp = 70)
bgcolor(buySignalColour_G, transp = 70)

// Plot EMA Spread Values on Chart
plot(emaSpreadA, color = emaSpreadColour_A, title="EMA Spread A", linewidth=3)
plot(emaSpreadB, color = emaSpreadColour_B, title="EMA Spread B", linewidth=3)
plot(emaSpreadC, color = emaSpreadColour_C, title="EMA Spread C", linewidth=3)
plot(emaSpreadD, color = emaSpreadColour_D, title="EMA Spread D", linewidth=3)
plot(emaSpreadE, color = emaSpreadColour_E, title="EMA Spread E", linewidth=3)
plot(emaSpreadF, color = emaSpreadColour_F, title="EMA Spread F", linewidth=3)
plot(emaSpreadG, color = emaSpreadColour_G, title="EMA Spread G", linewidth=3)

// Create Alerts for EMA Spread Buy Signals
alertcondition(buySignalEMASpread_A, title = 'LONG_A', message = 'LONG_A')
alertcondition(buySignalEMASpread_B, title = 'LONG_B', message = 'LONG_B')
alertcondition(buySignalEMASpread_C, title = 'LONG_C', message = 'LONG_C')
alertcondition(buySignalEMASpread_D, title = 'LONG_D', message = 'LONG_D')
alertcondition(buySignalEMASpread_E, title = 'LONG_E', message = 'LONG_E')
alertcondition(buySignalEMASpread_F, title = 'LONG_F', message = 'LONG_F')
alertcondition(buySignalEMASpread_G, title = 'LONG_G', message = 'LONG_G')
